{"testOrder":["org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapterTest.testHandlePostNoResponse","org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapterTest.testHandleInvalidXml","org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapterTest.testHandleNonPost","org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapterTest.testHandlePostFault","org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapterTest.testHandleNotFound","org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapterTest.testHandlePostResponse","org.springframework.ws.server.endpoint.mapping.MapBasedSoapEndpointMappingTest.testDisabledBeanNames","org.springframework.ws.server.endpoint.mapping.MapBasedSoapEndpointMappingTest.testBeanNames","org.springframework.ws.server.endpoint.mapping.MapBasedSoapEndpointMappingTest.testEndpointMap","org.springframework.ws.soap.addressing.server.AnnotationActionMethodEndpointMappingTest.mapping","org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMappingTest.invoke","org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMappingTest.registrationMultiple","org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMappingTest.registrationRepeatable","org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMappingTest.registrationSingle","org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMappingTest.registrationInvalid","org.springframework.ws.soap.addressing.server.AddressingInterceptor200408Test.testOutOfBandReplyTo","org.springframework.ws.soap.addressing.server.AddressingInterceptor200408Test.testNoReplyTo","org.springframework.ws.soap.addressing.server.AddressingInterceptor200408Test.testFaultTo","org.springframework.ws.soap.addressing.server.AddressingInterceptor200408Test.testNoMessageId","org.springframework.ws.soap.addressing.server.AddressingInterceptor200408Test.testNoneReplyTo","org.springframework.ws.soap.addressing.server.AddressingInterceptor200408Test.testUnderstands","org.springframework.ws.soap.addressing.server.AddressingInterceptor200408Test.testAnonymousReplyTo","org.springframework.ws.soap.addressing.server.AddressingInterceptor200408Test.testValidRequest","org.springframework.ws.server.endpoint.mapping.PayloadRootQNameEndpointMappingTest.testResolveQNames","org.springframework.ws.server.endpoint.mapping.PayloadRootQNameEndpointMappingTest.testGetQNameNameNamespace","org.springframework.ws.soap.addressing.server.AddressingInterceptor10Test.testOutOfBandReplyTo","org.springframework.ws.soap.addressing.server.AddressingInterceptor10Test.testNoReplyTo","org.springframework.ws.soap.addressing.server.AddressingInterceptor10Test.testFaultTo","org.springframework.ws.soap.addressing.server.AddressingInterceptor10Test.testNoMessageId","org.springframework.ws.soap.addressing.server.AddressingInterceptor10Test.testNoneReplyTo","org.springframework.ws.soap.addressing.server.AddressingInterceptor10Test.testUnderstands","org.springframework.ws.soap.addressing.server.AddressingInterceptor10Test.testAnonymousReplyTo","org.springframework.ws.soap.addressing.server.AddressingInterceptor10Test.testValidRequest","org.springframework.ws.server.endpoint.mapping.SimpleMethodEndpointMappingTest.testGetLookupKeyForMessageNamespace","org.springframework.ws.server.endpoint.mapping.SimpleMethodEndpointMappingTest.testRegistration","org.springframework.ws.server.endpoint.mapping.SimpleMethodEndpointMappingTest.testGetLookupKeyForMessageNoNamespace","org.springframework.ws.soap.addressing.messageid.UuidMessageIdStrategyTest.testStrategy","org.springframework.ws.server.endpoint.mapping.UriEndpointMappingTest.getLookupKeyForMessagePath","org.springframework.ws.server.endpoint.mapping.UriEndpointMappingTest.getLookupKeyForMessage","org.springframework.ws.server.endpoint.mapping.UriEndpointMappingTest.testValidateLookupKey","org.springframework.ws.soap.addressing.client.ActionCallback200408Test.testValid","org.springframework.ws.soap.addressing.client.ActionCallback200408Test.testDefaults","org.springframework.ws.server.endpoint.mapping.XPathPayloadEndpointMappingTest.testGetLookupKeyForMessage","org.springframework.ws.soap.addressing.client.ActionCallback10Test.testValid","org.springframework.ws.soap.addressing.client.ActionCallback10Test.testDefaults","org.springframework.ws.server.endpoint.mapping.jaxb.XmlRootElementEndpointMappingTest.rootElement","org.springframework.ws.server.endpoint.support.PayloadRootUtilsTest.testGetQNameForStaxSourceEventReader","org.springframework.ws.server.endpoint.support.PayloadRootUtilsTest.testGetQNameForDomSource","org.springframework.ws.server.endpoint.support.PayloadRootUtilsTest.testGetQNameForStreamSource","org.springframework.ws.server.endpoint.support.PayloadRootUtilsTest.testGetQNameForStaxSourceStreamReader","org.springframework.ws.server.endpoint.support.PayloadRootUtilsTest.testGetQNameForSaxSource","org.springframework.ws.server.endpoint.support.PayloadRootUtilsTest.testGetQNameForNullSource","org.springframework.ws.server.endpoint.support.NamespaceUtilsTest.getNamespaceContextMethod","org.springframework.ws.server.endpoint.support.NamespaceUtilsTest.getNamespaceContextClass","org.springframework.ws.server.endpoint.MarshallingPayloadEndpointTest.testInvokeMimeMarshaller","org.springframework.ws.server.endpoint.MarshallingPayloadEndpointTest.testInvokeNoRequest","org.springframework.ws.server.endpoint.MarshallingPayloadEndpointTest.testInvokeNullResponse","org.springframework.ws.server.endpoint.MarshallingPayloadEndpointTest.testInvoke","org.springframework.ws.server.endpoint.MethodEndpointTest.testToString","org.springframework.ws.server.endpoint.MethodEndpointTest.testGetters","org.springframework.ws.server.endpoint.MethodEndpointTest.testHashCode","org.springframework.ws.server.endpoint.MethodEndpointTest.testEquals","org.springframework.ws.server.endpoint.MethodEndpointTest.testInvoke","org.springframework.ws.server.endpoint.JDomPayloadEndpointTest.testNoRequest","org.springframework.ws.server.endpoint.JDomPayloadEndpointTest.testNoResponse","org.springframework.ws.server.endpoint.JDomPayloadEndpointTest.testStreamSourceReader","org.springframework.ws.server.endpoint.JDomPayloadEndpointTest.testStaxSourceEventReader","org.springframework.ws.server.endpoint.JDomPayloadEndpointTest.testStreamSourceInputStream","org.springframework.ws.server.endpoint.JDomPayloadEndpointTest.testDomSource","org.springframework.ws.server.endpoint.JDomPayloadEndpointTest.testStaxSourceStreamReader","org.springframework.ws.server.endpoint.JDomPayloadEndpointTest.testSaxSource","org.springframework.ws.server.endpoint.SaxPayloadEndpointTest.testNoRequest","org.springframework.ws.server.endpoint.SaxPayloadEndpointTest.testNoResponse","org.springframework.ws.server.endpoint.SaxPayloadEndpointTest.testStreamSourceReader","org.springframework.ws.server.endpoint.SaxPayloadEndpointTest.testStaxSourceEventReader","org.springframework.ws.server.endpoint.SaxPayloadEndpointTest.testStreamSourceInputStream","org.springframework.ws.server.endpoint.SaxPayloadEndpointTest.testDomSource","org.springframework.ws.server.endpoint.SaxPayloadEndpointTest.testStaxSourceStreamReader","org.springframework.ws.server.endpoint.SaxPayloadEndpointTest.testSaxSource","org.springframework.ws.server.endpoint.EndpointExceptionResolverTest.testMatchMethodEndpoint","org.springframework.ws.server.endpoint.StaxEventPayloadEndpointTest.testNoRequestPayload","org.springframework.ws.server.endpoint.StaxEventPayloadEndpointTest.testNoResponse","org.springframework.ws.server.endpoint.StaxEventPayloadEndpointTest.testStreamSourceReader","org.springframework.ws.server.endpoint.StaxEventPayloadEndpointTest.testStaxSourceEventReader","org.springframework.ws.server.endpoint.StaxEventPayloadEndpointTest.testStreamSourceInputStream","org.springframework.ws.server.endpoint.StaxEventPayloadEndpointTest.testDomSource","org.springframework.ws.server.endpoint.StaxEventPayloadEndpointTest.testStaxSourceStreamReader","org.springframework.ws.server.endpoint.StaxEventPayloadEndpointTest.testSaxSource","org.springframework.ws.server.endpoint.DomPayloadEndpointTest.testNoRequest","org.springframework.ws.server.endpoint.DomPayloadEndpointTest.testNoResponse","org.springframework.ws.server.endpoint.DomPayloadEndpointTest.testStreamSourceReader","org.springframework.ws.server.endpoint.DomPayloadEndpointTest.testStaxSourceEventReader","org.springframework.ws.server.endpoint.DomPayloadEndpointTest.testStreamSourceInputStream","org.springframework.ws.server.endpoint.DomPayloadEndpointTest.testDomSource","org.springframework.ws.server.endpoint.DomPayloadEndpointTest.testStaxSourceStreamReader","org.springframework.ws.server.endpoint.DomPayloadEndpointTest.testSaxSource","org.springframework.ws.server.endpoint.StaxStreamPayloadEndpointTest.testAxiomResponseNoPayloadCaching","org.springframework.ws.server.endpoint.StaxStreamPayloadEndpointTest.testSaajResponse","org.springframework.ws.server.endpoint.StaxStreamPayloadEndpointTest.testAxiomNoResponse","org.springframework.ws.server.endpoint.StaxStreamPayloadEndpointTest.testAxiomNoResponseNoPayloadCaching","org.springframework.ws.server.endpoint.StaxStreamPayloadEndpointTest.testAxiomResponse","org.springframework.ws.server.endpoint.StaxStreamPayloadEndpointTest.testNoRequestPayload","org.springframework.ws.server.endpoint.StaxStreamPayloadEndpointTest.testNoResponse","org.springframework.ws.server.endpoint.StaxStreamPayloadEndpointTest.testStreamSourceReader","org.springframework.ws.server.endpoint.StaxStreamPayloadEndpointTest.testStaxSourceEventReader","org.springframework.ws.server.endpoint.StaxStreamPayloadEndpointTest.testStreamSourceInputStream","org.springframework.ws.server.endpoint.StaxStreamPayloadEndpointTest.testDomSource","org.springframework.ws.server.endpoint.StaxStreamPayloadEndpointTest.testStaxSourceStreamReader","org.springframework.ws.server.endpoint.StaxStreamPayloadEndpointTest.testSaxSource","org.springframework.ws.server.endpoint.Dom4jPayloadEndpointTest.testNoRequest","org.springframework.ws.server.endpoint.Dom4jPayloadEndpointTest.testNoResponse","org.springframework.ws.server.endpoint.Dom4jPayloadEndpointTest.testStreamSourceReader","org.springframework.ws.server.endpoint.Dom4jPayloadEndpointTest.testStaxSourceEventReader","org.springframework.ws.server.endpoint.Dom4jPayloadEndpointTest.testStreamSourceInputStream","org.springframework.ws.server.endpoint.Dom4jPayloadEndpointTest.testDomSource","org.springframework.ws.server.endpoint.Dom4jPayloadEndpointTest.testStaxSourceStreamReader","org.springframework.ws.server.endpoint.Dom4jPayloadEndpointTest.testSaxSource","org.springframework.ws.server.endpoint.XomPayloadEndpointTest.testNoRequest","org.springframework.ws.server.endpoint.XomPayloadEndpointTest.testNoResponse","org.springframework.ws.server.endpoint.XomPayloadEndpointTest.testStreamSourceReader","org.springframework.ws.server.endpoint.XomPayloadEndpointTest.testStaxSourceEventReader","org.springframework.ws.server.endpoint.XomPayloadEndpointTest.testStreamSourceInputStream","org.springframework.ws.server.endpoint.XomPayloadEndpointTest.testDomSource","org.springframework.ws.server.endpoint.XomPayloadEndpointTest.testStaxSourceStreamReader","org.springframework.ws.server.endpoint.XomPayloadEndpointTest.testSaxSource","org.springframework.ws.server.MessageDispatcherTest.testFaultFlow","org.springframework.ws.server.MessageDispatcherTest.testFlowNoResponse","org.springframework.ws.server.MessageDispatcherTest.testNormalFlow","org.springframework.ws.server.MessageDispatcherTest.testNoEndpointFound","org.springframework.ws.server.MessageDispatcherTest.testDefaultStrategies","org.springframework.ws.server.MessageDispatcherTest.testResolveExceptionsWithInterceptors","org.springframework.ws.server.MessageDispatcherTest.testResolveException","org.springframework.ws.server.MessageDispatcherTest.testProcessUnsupportedEndpointException","org.springframework.ws.server.MessageDispatcherTest.testDetectStrategies","org.springframework.ws.server.MessageDispatcherTest.testGetEndpoint","org.springframework.ws.server.MessageDispatcherTest.testGetEndpointAdapterSupportedEndpoint","org.springframework.ws.server.MessageDispatcherTest.testInterceptedResponseFlow","org.springframework.ws.server.MessageDispatcherTest.testInterceptedRequestFlow","org.springframework.ws.server.MessageDispatcherTest.testGetEndpointAdapterUnsupportedEndpoint","org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapterTest.supportsUnsupportedReturnType","org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapterTest.invokeException","org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapterTest.invokeNullReturnValue","org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapterTest.supportsSupported","org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapterTest.supportsUnsupportedParameter","org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapterTest.initDefaultStrategies","org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapterTest.invokeSupported","org.springframework.ws.pox.dom.DomPoxMessageTest.testGetPayloadResultTwice","org.springframework.ws.pox.dom.DomPoxMessageTest.testGetPayload","org.springframework.ws.pox.dom.DomPoxMessageTest.testWriteTo","org.springframework.ws.server.endpoint.adapter.GenericMarshallingMethodEndpointAdapterTest.testUnsupportedMethodWrongParam","org.springframework.ws.server.endpoint.adapter.GenericMarshallingMethodEndpointAdapterTest.testNoRequestPayload","org.springframework.ws.server.endpoint.adapter.GenericMarshallingMethodEndpointAdapterTest.testNoResponse","org.springframework.ws.server.endpoint.adapter.GenericMarshallingMethodEndpointAdapterTest.testUnsupportedMethodWrongReturnType","org.springframework.ws.server.endpoint.adapter.GenericMarshallingMethodEndpointAdapterTest.testResponse","org.springframework.ws.server.endpoint.adapter.GenericMarshallingMethodEndpointAdapterTest.testSupportedNoResponse","org.springframework.ws.server.endpoint.adapter.GenericMarshallingMethodEndpointAdapterTest.testUnsupportedMethodMultipleParams","org.springframework.ws.server.endpoint.adapter.GenericMarshallingMethodEndpointAdapterTest.testSupportedResponse","org.springframework.ws.pox.dom.DomPoxMessageFactoryTest.testCreateEmptyMessage","org.springframework.ws.server.endpoint.adapter.MarshallingMethodEndpointAdapterTest.testUnsupportedMethodWrongParam","org.springframework.ws.server.endpoint.adapter.MarshallingMethodEndpointAdapterTest.testNoRequestPayload","org.springframework.ws.server.endpoint.adapter.MarshallingMethodEndpointAdapterTest.testNoResponse","org.springframework.ws.server.endpoint.adapter.MarshallingMethodEndpointAdapterTest.testUnsupportedMethodWrongReturnType","org.springframework.ws.server.endpoint.adapter.MarshallingMethodEndpointAdapterTest.testResponse","org.springframework.ws.server.endpoint.adapter.MarshallingMethodEndpointAdapterTest.testSupportedNoResponse","org.springframework.ws.server.endpoint.adapter.MarshallingMethodEndpointAdapterTest.testUnsupportedMethodMultipleParams","org.springframework.ws.server.endpoint.adapter.MarshallingMethodEndpointAdapterTest.testSupportedResponse","org.springframework.ws.context.DefaultMessageContextTest.testProperties","org.springframework.ws.context.DefaultMessageContextTest.testResponse","org.springframework.ws.context.DefaultMessageContextTest.testRequest","org.springframework.ws.config.annotation.WsConfigurerAdapterTest.argumentResolvers","org.springframework.ws.config.annotation.WsConfigurerAdapterTest.interceptors","org.springframework.ws.config.annotation.WsConfigurerAdapterTest.returnValueHandlers","org.springframework.ws.client.core.AxiomNonStreamingSoap11WebServiceTemplateIntegrationTest.sendSourceAndReceiveToResult","org.springframework.ws.client.core.AxiomNonStreamingSoap11WebServiceTemplateIntegrationTest.attachment","org.springframework.ws.client.core.AxiomNonStreamingSoap11WebServiceTemplateIntegrationTest.marshalSendAndReceiveNoResponse","org.springframework.ws.client.core.AxiomNonStreamingSoap11WebServiceTemplateIntegrationTest.fault","org.springframework.ws.client.core.AxiomNonStreamingSoap11WebServiceTemplateIntegrationTest.faultNonCompliant","org.springframework.ws.client.core.AxiomNonStreamingSoap11WebServiceTemplateIntegrationTest.marshalSendAndReceiveResponse","org.springframework.ws.client.core.AxiomNonStreamingSoap11WebServiceTemplateIntegrationTest.sendSourceAndReceiveToResultNoResponse","org.springframework.ws.client.core.AxiomNonStreamingSoap11WebServiceTemplateIntegrationTest.notFound","org.springframework.ws.client.core.AxiomNonStreamingSoap12WebServiceTemplateIntegrationTest.sendSourceAndReceiveToResult","org.springframework.ws.client.core.AxiomNonStreamingSoap12WebServiceTemplateIntegrationTest.attachment","org.springframework.ws.client.core.AxiomNonStreamingSoap12WebServiceTemplateIntegrationTest.receiverFault","org.springframework.ws.client.core.AxiomNonStreamingSoap12WebServiceTemplateIntegrationTest.marshalSendAndReceiveNoResponse","org.springframework.ws.client.core.AxiomNonStreamingSoap12WebServiceTemplateIntegrationTest.marshalSendAndReceiveResponse","org.springframework.ws.client.core.AxiomNonStreamingSoap12WebServiceTemplateIntegrationTest.senderFault","org.springframework.ws.client.core.AxiomNonStreamingSoap12WebServiceTemplateIntegrationTest.sendSourceAndReceiveToResultNoResponse","org.springframework.ws.client.core.AxiomNonStreamingSoap12WebServiceTemplateIntegrationTest.notFound","org.springframework.ws.config.annotation.DefaultWsConfigurationTest.annotationActionEndpointMapping","org.springframework.ws.config.annotation.DefaultWsConfigurationTest.defaultMethodEndpointAdapter","org.springframework.ws.config.annotation.DefaultWsConfigurationTest.payloadRootAnnotationMethodEndpointMapping","org.springframework.ws.config.annotation.DefaultWsConfigurationTest.soapActionAnnotationMethodEndpointMapping","org.springframework.ws.client.core.AxiomStreamingSoap11WebServiceTemplateIntegrationTest.sendSourceAndReceiveToResult","org.springframework.ws.client.core.AxiomStreamingSoap11WebServiceTemplateIntegrationTest.attachment","org.springframework.ws.client.core.AxiomStreamingSoap11WebServiceTemplateIntegrationTest.marshalSendAndReceiveNoResponse","org.springframework.ws.client.core.AxiomStreamingSoap11WebServiceTemplateIntegrationTest.fault","org.springframework.ws.client.core.AxiomStreamingSoap11WebServiceTemplateIntegrationTest.faultNonCompliant","org.springframework.ws.client.core.AxiomStreamingSoap11WebServiceTemplateIntegrationTest.marshalSendAndReceiveResponse","org.springframework.ws.client.core.AxiomStreamingSoap11WebServiceTemplateIntegrationTest.sendSourceAndReceiveToResultNoResponse","org.springframework.ws.client.core.AxiomStreamingSoap11WebServiceTemplateIntegrationTest.notFound","org.springframework.ws.config.WsdlBeanDefinitionParserTest.dynamicWsdl","org.springframework.ws.config.WsdlBeanDefinitionParserTest.staticWsdl","org.springframework.ws.client.core.AxiomStreamingSoap12WebServiceTemplateIntegrationTest.sendSourceAndReceiveToResult","org.springframework.ws.client.core.AxiomStreamingSoap12WebServiceTemplateIntegrationTest.attachment","org.springframework.ws.client.core.AxiomStreamingSoap12WebServiceTemplateIntegrationTest.receiverFault","org.springframework.ws.client.core.AxiomStreamingSoap12WebServiceTemplateIntegrationTest.marshalSendAndReceiveNoResponse","org.springframework.ws.client.core.AxiomStreamingSoap12WebServiceTemplateIntegrationTest.marshalSendAndReceiveResponse","org.springframework.ws.client.core.AxiomStreamingSoap12WebServiceTemplateIntegrationTest.senderFault","org.springframework.ws.client.core.AxiomStreamingSoap12WebServiceTemplateIntegrationTest.sendSourceAndReceiveToResultNoResponse","org.springframework.ws.client.core.AxiomStreamingSoap12WebServiceTemplateIntegrationTest.notFound","org.springframework.ws.config.WebServicesNamespaceHandlerTigerTest.testXpathEndpoints","org.springframework.ws.config.WebServicesNamespaceHandlerTigerTest.testMarshallingEndpoints","org.springframework.ws.client.core.DomPoxWebServiceTemplateIntegrationTest.domPox","org.springframework.ws.config.WebServiceNamespaceHandlerTest.testMarshallingMethods","org.springframework.ws.client.core.SaajSoap11WebServiceTemplateIntegrationTest.sendSourceAndReceiveToResult","org.springframework.ws.client.core.SaajSoap11WebServiceTemplateIntegrationTest.attachment","org.springframework.ws.client.core.SaajSoap11WebServiceTemplateIntegrationTest.marshalSendAndReceiveNoResponse","org.springframework.ws.client.core.SaajSoap11WebServiceTemplateIntegrationTest.fault","org.springframework.ws.client.core.SaajSoap11WebServiceTemplateIntegrationTest.faultNonCompliant","org.springframework.ws.client.core.SaajSoap11WebServiceTemplateIntegrationTest.marshalSendAndReceiveResponse","org.springframework.ws.client.core.SaajSoap11WebServiceTemplateIntegrationTest.sendSourceAndReceiveToResultNoResponse","org.springframework.ws.client.core.SaajSoap11WebServiceTemplateIntegrationTest.notFound","org.springframework.ws.config.InterceptorsBeanDefinitionParserTest.injection","org.springframework.ws.config.InterceptorsBeanDefinitionParserTest.ordering","org.springframework.ws.config.InterceptorsBeanDefinitionParserTest.namespace","org.springframework.ws.client.core.SaajSoap12WebServiceTemplateIntegrationTest.sendSourceAndReceiveToResult","org.springframework.ws.client.core.SaajSoap12WebServiceTemplateIntegrationTest.attachment","org.springframework.ws.client.core.SaajSoap12WebServiceTemplateIntegrationTest.receiverFault","org.springframework.ws.client.core.SaajSoap12WebServiceTemplateIntegrationTest.marshalSendAndReceiveNoResponse","org.springframework.ws.client.core.SaajSoap12WebServiceTemplateIntegrationTest.marshalSendAndReceiveResponse","org.springframework.ws.client.core.SaajSoap12WebServiceTemplateIntegrationTest.senderFault","org.springframework.ws.client.core.SaajSoap12WebServiceTemplateIntegrationTest.sendSourceAndReceiveToResultNoResponse","org.springframework.ws.client.core.SaajSoap12WebServiceTemplateIntegrationTest.notFound","org.springframework.ws.config.AnnotationDrivenBeanDefinitionParserTest.endpointMappings","org.springframework.ws.config.AnnotationDrivenBeanDefinitionParserTest.endpointExceptionResolver","org.springframework.ws.config.AnnotationDrivenBeanDefinitionParserTest.endpointAdapters","org.springframework.ws.client.core.SimpleFaultMessageResolverTest.testResolveFault","org.springframework.ws.client.support.interceptor.PayloadValidatingInterceptorTest.testHandleValidRequest","org.springframework.ws.client.support.interceptor.PayloadValidatingInterceptorTest.testXsdSchema","org.springframework.ws.client.support.interceptor.PayloadValidatingInterceptorTest.testHandleInvalidResponseMultipleSchemas","org.springframework.ws.client.support.interceptor.PayloadValidatingInterceptorTest.testNamespacesInType","org.springframework.ws.client.support.interceptor.PayloadValidatingInterceptorTest.testHandlerInvalidRequestMultipleSchemas","org.springframework.ws.client.support.interceptor.PayloadValidatingInterceptorTest.testHandlerInvalidRequest","org.springframework.ws.client.support.interceptor.PayloadValidatingInterceptorTest.testHandleInvalidRequest","org.springframework.ws.client.support.interceptor.PayloadValidatingInterceptorTest.testHandleValidResponseMultipleSchemas","org.springframework.ws.client.support.interceptor.PayloadValidatingInterceptorTest.testNonExistingSchema","org.springframework.ws.client.support.interceptor.PayloadValidatingInterceptorTest.testHandleValidResponse","org.springframework.ws.client.support.interceptor.PayloadValidatingInterceptorTest.testHandleValidRequestMultipleSchemas","org.springframework.ws.client.support.interceptor.PayloadValidatingInterceptorTest.testHandleInvalidResponse","org.springframework.ws.client.core.WebServiceTemplateTest.testSendAndReceiveResultNoResponse","org.springframework.ws.client.core.WebServiceTemplateTest.testSendAndReceiveConnectionError","org.springframework.ws.client.core.WebServiceTemplateTest.testInterceptorsInterceptedNoResponse","org.springframework.ws.client.core.WebServiceTemplateTest.testSendAndReceiveMarshalNoResponse","org.springframework.ws.client.core.WebServiceTemplateTest.testSendAndReceiveCustomUri","org.springframework.ws.client.core.WebServiceTemplateTest.testSendAndReceiveResultResponse","org.springframework.ws.client.core.WebServiceTemplateTest.testMarshalAndSendNoMarshallerSet","org.springframework.ws.client.core.WebServiceTemplateTest.testSendAndReceiveSourceNoResponse","org.springframework.ws.client.core.WebServiceTemplateTest.testSendAndReceiveSourceResponse","org.springframework.ws.client.core.WebServiceTemplateTest.testInterceptors","org.springframework.ws.client.core.WebServiceTemplateTest.testInterceptorsInterceptedCreateResponse","org.springframework.ws.client.core.WebServiceTemplateTest.testSendAndReceiveResultNoResponsePayload","org.springframework.ws.client.core.WebServiceTemplateTest.testSendAndReceiveMessageNoResponse","org.springframework.ws.client.core.WebServiceTemplateTest.testSendAndReceiveMessageFault","org.springframework.ws.client.core.WebServiceTemplateTest.testMarshalAndSendNoUnmarshallerSet","org.springframework.ws.client.core.WebServiceTemplateTest.testDestinationResolver","org.springframework.ws.client.core.WebServiceTemplateTest.testSendAndReceiveMarshalResponse","org.springframework.ws.client.core.WebServiceTemplateTest.testSendAndReceiveMessageResponse","org.springframework.ws.client.support.interceptor.ClientInterceptorAdapterTest.handleTestAdapter","org.springframework.ws.client.support.interceptor.ClientInterceptorAdapterTest.handleEmptyInterceptor","org.springframework.ws.client.support.destination.Wsdl11DestinationProviderTest.testComplex","org.springframework.ws.client.support.destination.Wsdl11DestinationProviderTest.testCustomExpression","org.springframework.ws.client.support.destination.Wsdl11DestinationProviderTest.testSimple","org.springframework.ws.config.annotation.WsConfigurationSupportTest.defaultMethodEndpointAdapter","org.springframework.ws.config.annotation.WsConfigurationSupportTest.interceptors","org.springframework.ws.server.endpoint.mapping.CgLibProxyRegistrationTest.registration","org.springframework.ws.server.endpoint.adapter.method.XPathParamMethodArgumentResolverTest.resolveNamespacesClass","org.springframework.ws.server.endpoint.adapter.method.XPathParamMethodArgumentResolverTest.resolveNodeList","org.springframework.ws.server.endpoint.adapter.method.XPathParamMethodArgumentResolverTest.resolveDouble","org.springframework.ws.server.endpoint.adapter.method.XPathParamMethodArgumentResolverTest.resolveString","org.springframework.ws.server.endpoint.adapter.method.XPathParamMethodArgumentResolverTest.resolveConvertedType","org.springframework.ws.server.endpoint.adapter.method.XPathParamMethodArgumentResolverTest.resolveNamespacesMethod","org.springframework.ws.server.endpoint.adapter.method.XPathParamMethodArgumentResolverTest.supportsParameter","org.springframework.ws.server.endpoint.adapter.method.XPathParamMethodArgumentResolverTest.resolveNode","org.springframework.ws.server.endpoint.adapter.method.XPathParamMethodArgumentResolverTest.resolveBoolean","org.springframework.ws.server.endpoint.adapter.method.dom.Dom4jPayloadMethodProcessorTest.saajReturnValue","org.springframework.ws.server.endpoint.adapter.method.dom.Dom4jPayloadMethodProcessorTest.axiomCachingArgument","org.springframework.ws.server.endpoint.adapter.method.dom.Dom4jPayloadMethodProcessorTest.mockReturnValue","org.springframework.ws.server.endpoint.adapter.method.dom.Dom4jPayloadMethodProcessorTest.mockArgument","org.springframework.ws.server.endpoint.adapter.method.dom.Dom4jPayloadMethodProcessorTest.axiomNonCachingArgument","org.springframework.ws.server.endpoint.adapter.method.dom.Dom4jPayloadMethodProcessorTest.axiomNonCachingReturnValue","org.springframework.ws.server.endpoint.adapter.method.dom.Dom4jPayloadMethodProcessorTest.axiomCachingReturnValue","org.springframework.ws.server.endpoint.adapter.method.dom.Dom4jPayloadMethodProcessorTest.supportsParameter","org.springframework.ws.server.endpoint.adapter.method.dom.Dom4jPayloadMethodProcessorTest.supportsReturnType","org.springframework.ws.server.endpoint.adapter.method.dom.Dom4jPayloadMethodProcessorTest.saajArgument","org.springframework.ws.server.endpoint.adapter.method.StaxPayloadMethodArgumentResolverTest.resolveEventReaderStream","org.springframework.ws.server.endpoint.adapter.method.StaxPayloadMethodArgumentResolverTest.resolveStreamReaderSaaj","org.springframework.ws.server.endpoint.adapter.method.StaxPayloadMethodArgumentResolverTest.resolveEventReaderAxiomNonCaching","org.springframework.ws.server.endpoint.adapter.method.StaxPayloadMethodArgumentResolverTest.resolveEventReaderSaaj","org.springframework.ws.server.endpoint.adapter.method.StaxPayloadMethodArgumentResolverTest.resolveStreamReaderAxiomCaching","org.springframework.ws.server.endpoint.adapter.method.StaxPayloadMethodArgumentResolverTest.resolveStreamReaderAxiomNonCaching","org.springframework.ws.server.endpoint.adapter.method.StaxPayloadMethodArgumentResolverTest.resolveEventReaderAxiomCaching","org.springframework.ws.server.endpoint.adapter.method.StaxPayloadMethodArgumentResolverTest.resolveStreamReaderStream","org.springframework.ws.server.endpoint.adapter.method.StaxPayloadMethodArgumentResolverTest.supportsParameter","org.springframework.ws.server.endpoint.adapter.method.dom.DomPayloadMethodProcessorTest.saajReturnValue","org.springframework.ws.server.endpoint.adapter.method.dom.DomPayloadMethodProcessorTest.axiomCachingArgument","org.springframework.ws.server.endpoint.adapter.method.dom.DomPayloadMethodProcessorTest.mockReturnValue","org.springframework.ws.server.endpoint.adapter.method.dom.DomPayloadMethodProcessorTest.mockArgument","org.springframework.ws.server.endpoint.adapter.method.dom.DomPayloadMethodProcessorTest.axiomNonCachingArgument","org.springframework.ws.server.endpoint.adapter.method.dom.DomPayloadMethodProcessorTest.axiomNonCachingReturnValue","org.springframework.ws.server.endpoint.adapter.method.dom.DomPayloadMethodProcessorTest.axiomCachingReturnValue","org.springframework.ws.server.endpoint.adapter.method.dom.DomPayloadMethodProcessorTest.supportsParameter","org.springframework.ws.server.endpoint.adapter.method.dom.DomPayloadMethodProcessorTest.supportsReturnType","org.springframework.ws.server.endpoint.adapter.method.dom.DomPayloadMethodProcessorTest.saajArgument","org.springframework.ws.server.endpoint.adapter.method.SourcePayloadMethodProcessorTest.saajReturnValue","org.springframework.ws.server.endpoint.adapter.method.SourcePayloadMethodProcessorTest.axiomCachingArgument","org.springframework.ws.server.endpoint.adapter.method.SourcePayloadMethodProcessorTest.mockReturnValue","org.springframework.ws.server.endpoint.adapter.method.SourcePayloadMethodProcessorTest.mockArgument","org.springframework.ws.server.endpoint.adapter.method.SourcePayloadMethodProcessorTest.axiomNonCachingArgument","org.springframework.ws.server.endpoint.adapter.method.SourcePayloadMethodProcessorTest.axiomNonCachingReturnValue","org.springframework.ws.server.endpoint.adapter.method.SourcePayloadMethodProcessorTest.axiomCachingReturnValue","org.springframework.ws.server.endpoint.adapter.method.SourcePayloadMethodProcessorTest.supportsParameter","org.springframework.ws.server.endpoint.adapter.method.SourcePayloadMethodProcessorTest.supportsReturnType","org.springframework.ws.server.endpoint.adapter.method.SourcePayloadMethodProcessorTest.saajArgument","org.springframework.ws.server.endpoint.adapter.method.dom.JDomPayloadMethodProcessorTest.saajReturnValue","org.springframework.ws.server.endpoint.adapter.method.dom.JDomPayloadMethodProcessorTest.axiomCachingArgument","org.springframework.ws.server.endpoint.adapter.method.dom.JDomPayloadMethodProcessorTest.mockReturnValue","org.springframework.ws.server.endpoint.adapter.method.dom.JDomPayloadMethodProcessorTest.mockArgument","org.springframework.ws.server.endpoint.adapter.method.dom.JDomPayloadMethodProcessorTest.axiomNonCachingArgument","org.springframework.ws.server.endpoint.adapter.method.dom.JDomPayloadMethodProcessorTest.axiomNonCachingReturnValue","org.springframework.ws.server.endpoint.adapter.method.dom.JDomPayloadMethodProcessorTest.axiomCachingReturnValue","org.springframework.ws.server.endpoint.adapter.method.dom.JDomPayloadMethodProcessorTest.supportsParameter","org.springframework.ws.server.endpoint.adapter.method.dom.JDomPayloadMethodProcessorTest.supportsReturnType","org.springframework.ws.server.endpoint.adapter.method.dom.JDomPayloadMethodProcessorTest.saajArgument","org.springframework.ws.server.endpoint.adapter.method.MessageContextMethodArgumentResolverTest.resolveArgument","org.springframework.ws.server.endpoint.adapter.method.MessageContextMethodArgumentResolverTest.supportsParameter","org.springframework.ws.server.endpoint.adapter.method.dom.XomPayloadMethodProcessorTest.saajReturnValue","org.springframework.ws.server.endpoint.adapter.method.dom.XomPayloadMethodProcessorTest.axiomCachingArgument","org.springframework.ws.server.endpoint.adapter.method.dom.XomPayloadMethodProcessorTest.mockReturnValue","org.springframework.ws.server.endpoint.adapter.method.dom.XomPayloadMethodProcessorTest.mockArgument","org.springframework.ws.server.endpoint.adapter.method.dom.XomPayloadMethodProcessorTest.axiomNonCachingArgument","org.springframework.ws.server.endpoint.adapter.method.dom.XomPayloadMethodProcessorTest.axiomNonCachingReturnValue","org.springframework.ws.server.endpoint.adapter.method.dom.XomPayloadMethodProcessorTest.axiomCachingReturnValue","org.springframework.ws.server.endpoint.adapter.method.dom.XomPayloadMethodProcessorTest.supportsParameter","org.springframework.ws.server.endpoint.adapter.method.dom.XomPayloadMethodProcessorTest.supportsReturnType","org.springframework.ws.server.endpoint.adapter.method.dom.XomPayloadMethodProcessorTest.saajArgument","org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessorTest.supportsReturnTypeSupported","org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessorTest.supportsReturnTypeNoMarshaller","org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessorTest.handleReturnValue","org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessorTest.resolveArgumentNoUnmarshaller","org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessorTest.supportsParameterUnsupported","org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessorTest.handleReturnValueNoMarshaller","org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessorTest.resolveArgument","org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessorTest.supportsParameterNoUnmarshallerSupported","org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessorTest.supportsReturnTypeUnsupported","org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessorTest.supportsParameterSupported","org.springframework.ws.server.endpoint.adapter.method.jaxb.JaxbElementPayloadMethodProcessorTest.handleNullReturnValue","org.springframework.ws.server.endpoint.adapter.method.jaxb.JaxbElementPayloadMethodProcessorTest.handleReturnValueString","org.springframework.ws.server.endpoint.adapter.method.jaxb.JaxbElementPayloadMethodProcessorTest.handleReturnValue","org.springframework.ws.server.endpoint.adapter.method.jaxb.JaxbElementPayloadMethodProcessorTest.resolveArgument","org.springframework.ws.server.endpoint.adapter.method.jaxb.JaxbElementPayloadMethodProcessorTest.supportsParameter","org.springframework.ws.server.endpoint.adapter.method.jaxb.JaxbElementPayloadMethodProcessorTest.handleReturnValueAxiom","org.springframework.ws.server.endpoint.adapter.method.jaxb.JaxbElementPayloadMethodProcessorTest.supportsReturnType","org.springframework.ws.server.endpoint.adapter.XPathParamAnnotationMethodEndpointAdapterTest.testInvokeVoidDom","org.springframework.ws.server.endpoint.adapter.XPathParamAnnotationMethodEndpointAdapterTest.testUnsupportedInvalidParam","org.springframework.ws.server.endpoint.adapter.XPathParamAnnotationMethodEndpointAdapterTest.testSupportsVoid","org.springframework.ws.server.endpoint.adapter.XPathParamAnnotationMethodEndpointAdapterTest.testUnsupportedInvalidReturnType","org.springframework.ws.server.endpoint.adapter.XPathParamAnnotationMethodEndpointAdapterTest.testSupportsSource","org.springframework.ws.server.endpoint.adapter.XPathParamAnnotationMethodEndpointAdapterTest.testInvokeTypes","org.springframework.ws.server.endpoint.adapter.XPathParamAnnotationMethodEndpointAdapterTest.testInvokeSource","org.springframework.ws.server.endpoint.adapter.XPathParamAnnotationMethodEndpointAdapterTest.testSupportedTypes","org.springframework.ws.server.endpoint.adapter.XPathParamAnnotationMethodEndpointAdapterTest.testSupportsStringSource","org.springframework.ws.server.endpoint.adapter.XPathParamAnnotationMethodEndpointAdapterTest.testUnsupportedInvalidParams","org.springframework.ws.server.endpoint.adapter.method.jaxb.XmlRootElementPayloadMethodProcessorTest.handleNullReturnValue","org.springframework.ws.server.endpoint.adapter.method.jaxb.XmlRootElementPayloadMethodProcessorTest.handleReturnValue","org.springframework.ws.server.endpoint.adapter.method.jaxb.XmlRootElementPayloadMethodProcessorTest.resolveArgumentRootElement","org.springframework.ws.server.endpoint.adapter.method.jaxb.XmlRootElementPayloadMethodProcessorTest.resolveArgumentFromCustomSAXSource","org.springframework.ws.server.endpoint.adapter.method.jaxb.XmlRootElementPayloadMethodProcessorTest.supportsParameter","org.springframework.ws.server.endpoint.adapter.method.jaxb.XmlRootElementPayloadMethodProcessorTest.handleReturnValueAxiom","org.springframework.ws.server.endpoint.adapter.method.jaxb.XmlRootElementPayloadMethodProcessorTest.supportsReturnType","org.springframework.ws.server.endpoint.adapter.method.jaxb.XmlRootElementPayloadMethodProcessorTest.resolveArgumentType","org.springframework.ws.server.endpoint.adapter.method.jaxb.XmlRootElementPayloadMethodProcessorTest.handleReturnValueAxiomNoPayloadCaching","org.springframework.ws.server.endpoint.adapter.PayloadMethodEndpointAdapterTest.testUnsupportedMethodWrongParam","org.springframework.ws.server.endpoint.adapter.PayloadMethodEndpointAdapterTest.testNoResponse","org.springframework.ws.server.endpoint.adapter.PayloadMethodEndpointAdapterTest.testUnsupportedMethodWrongReturnType","org.springframework.ws.server.endpoint.adapter.PayloadMethodEndpointAdapterTest.testResponse","org.springframework.ws.server.endpoint.adapter.PayloadMethodEndpointAdapterTest.testSupportedNoResponse","org.springframework.ws.server.endpoint.adapter.PayloadMethodEndpointAdapterTest.testUnsupportedMethodMultipleParams","org.springframework.ws.server.endpoint.adapter.PayloadMethodEndpointAdapterTest.testSupportedResponse","org.springframework.ws.server.endpoint.interceptor.PayloadTransformingInterceptorTest.testPox","org.springframework.ws.server.endpoint.interceptor.PayloadTransformingInterceptorTest.testSaaj","org.springframework.ws.server.endpoint.interceptor.PayloadTransformingInterceptorTest.testHandleResponse","org.springframework.ws.server.endpoint.interceptor.PayloadTransformingInterceptorTest.testHandleRequest","org.springframework.ws.server.endpoint.interceptor.PayloadTransformingInterceptorTest.testHandleRequestNoXslt","org.springframework.ws.server.endpoint.interceptor.PayloadTransformingInterceptorTest.testHandleResponseNoXslt","org.springframework.ws.server.endpoint.interceptor.PayloadTransformingInterceptorTest.testNoStylesheetsSet","org.springframework.ws.server.endpoint.adapter.PayloadEndpointAdapterTest.testSupports","org.springframework.ws.server.endpoint.adapter.PayloadEndpointAdapterTest.testInvokeNoResponse","org.springframework.ws.server.endpoint.adapter.PayloadEndpointAdapterTest.testInvoke","org.springframework.ws.server.endpoint.mapping.BridgedMethodRegistrationTest.registration","org.springframework.ws.server.endpoint.adapter.MessageMethodEndpointAdapterTest.testUnsupportedMethodWrongParam","org.springframework.ws.server.endpoint.adapter.MessageMethodEndpointAdapterTest.testSupported","org.springframework.ws.server.endpoint.adapter.MessageMethodEndpointAdapterTest.testInvokeSupported","org.springframework.ws.server.endpoint.adapter.MessageMethodEndpointAdapterTest.testUnsupportedMethodMultipleParams","org.springframework.ws.server.endpoint.adapter.MessageEndpointAdapterTest.testSupports","org.springframework.ws.server.endpoint.adapter.MessageEndpointAdapterTest.testInvoke","org.springframework.ws.server.endpoint.mapping.EndpointMappingTest.endpointInvalidBeanName","org.springframework.ws.server.endpoint.mapping.EndpointMappingTest.smartEndpointInterceptors","org.springframework.ws.server.endpoint.mapping.EndpointMappingTest.defaultEndpoint","org.springframework.ws.server.endpoint.mapping.EndpointMappingTest.endpointBeanName","org.springframework.ws.server.endpoint.mapping.EndpointMappingTest.endpointPrototype","org.springframework.ws.server.endpoint.mapping.EndpointMappingTest.endpointInterceptors","org.springframework.ws.server.endpoint.mapping.EndpointMappingTest.endpoint","org.springframework.ws.server.endpoint.mapping.JdkProxyRegistrationTest.registration","org.springframework.ws.transport.http.MessageDispatcherServletTest.testDefaultStrategies","org.springframework.ws.transport.http.MessageDispatcherServletTest.testDetectWsdlDefinitions","org.springframework.ws.transport.http.MessageDispatcherServletTest.testDetectedStrategies","org.springframework.ws.transport.http.MessageDispatcherServletIntegrationTest.echo","org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolverTest.testResolveExceptionSenderSoap12","org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolverTest.testGetDepth","org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolverTest.testResolveNoMessageException","org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolverTest.testResolveExceptionServerSoap11","org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolverTest.testResolveExceptionClientSoap11","org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolverTest.testResolveExceptionReceiverSoap12","org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolverTest.testResolveExceptionDefault","org.springframework.ws.soap.server.endpoint.adapter.method.SoapHeaderElementMethodArgumentResolverTest.failOnEmptyValue","org.springframework.ws.soap.server.endpoint.adapter.method.SoapHeaderElementMethodArgumentResolverTest.resolveSoapHeaderElement","org.springframework.ws.soap.server.endpoint.adapter.method.SoapHeaderElementMethodArgumentResolverTest.resolveSoapHeaderElementList","org.springframework.ws.soap.server.endpoint.adapter.method.SoapHeaderElementMethodArgumentResolverTest.resolveSoapHeaderMismatchList","org.springframework.ws.soap.server.endpoint.adapter.method.SoapHeaderElementMethodArgumentResolverTest.supportsParameter","org.springframework.ws.soap.server.endpoint.adapter.method.SoapHeaderElementMethodArgumentResolverTest.resolveSoapHeaderMismatch","org.springframework.ws.transport.http.HttpUrlConnectionMessageSenderIntegrationTest.testSetTimeout","org.springframework.ws.transport.http.HttpUrlConnectionMessageSenderIntegrationTest.testSendAndReceiveNoResponse","org.springframework.ws.transport.http.HttpUrlConnectionMessageSenderIntegrationTest.testSupports","org.springframework.ws.transport.http.HttpUrlConnectionMessageSenderIntegrationTest.testSendAndReceiveInvalidContentSize","org.springframework.ws.transport.http.HttpUrlConnectionMessageSenderIntegrationTest.testSendAndReceiveNoResponseAccepted","org.springframework.ws.transport.http.HttpUrlConnectionMessageSenderIntegrationTest.testSendAndReceiveFault","org.springframework.ws.transport.http.HttpUrlConnectionMessageSenderIntegrationTest.testSendAndReceiveResponse","org.springframework.ws.transport.http.HttpUrlConnectionMessageSenderIntegrationTest.testSendAndReceiveCompressed","org.springframework.ws.transport.http.HttpUrlConnectionMessageSenderIntegrationTest.testSendAndReceiveCompressedInvalidContentSize","org.springframework.ws.soap.server.endpoint.adapter.method.SoapMethodArgumentResolverTest.resolveSoapHeaderSaaj","org.springframework.ws.soap.server.endpoint.adapter.method.SoapMethodArgumentResolverTest.resolveSoapEnvelopeSaaj","org.springframework.ws.soap.server.endpoint.adapter.method.SoapMethodArgumentResolverTest.resolveSoapBodySaaj","org.springframework.ws.soap.server.endpoint.adapter.method.SoapMethodArgumentResolverTest.resolveSoapMessageSaaj","org.springframework.ws.soap.server.endpoint.adapter.method.SoapMethodArgumentResolverTest.supportsParameter","org.springframework.ws.transport.http.HttpServletConnectionTest.send","org.springframework.ws.transport.http.HttpServletConnectionTest.faultCodes","org.springframework.ws.transport.http.HttpServletConnectionTest.receive","org.springframework.ws.soap.server.endpoint.interceptor.PayloadRootSmartSoapEndpointInterceptorTest.shouldInterceptFullMatch","org.springframework.ws.soap.server.endpoint.interceptor.PayloadRootSmartSoapEndpointInterceptorTest.shouldInterceptNamespaceUriMatch","org.springframework.ws.soap.server.endpoint.interceptor.PayloadRootSmartSoapEndpointInterceptorTest.shouldInterceptNamespaceUriNonMatch","org.springframework.ws.soap.server.endpoint.interceptor.PayloadRootSmartSoapEndpointInterceptorTest.shouldInterceptFullNonMatch","org.springframework.ws.soap.server.endpoint.interceptor.PayloadRootSmartSoapEndpointInterceptorTest.neitherNamespaceNorLocalPart","org.springframework.ws.transport.http.HttpComponentsMessageSenderIntegrationTest.testMaxConnections","org.springframework.ws.transport.http.HttpComponentsMessageSenderIntegrationTest.testContextClose","org.springframework.ws.transport.http.HttpComponentsMessageSenderIntegrationTest.testSendAndReceiveNoResponse","org.springframework.ws.transport.http.HttpComponentsMessageSenderIntegrationTest.testSupports","org.springframework.ws.transport.http.HttpComponentsMessageSenderIntegrationTest.testSendAndReceiveInvalidContentSize","org.springframework.ws.transport.http.HttpComponentsMessageSenderIntegrationTest.testSendAndReceiveNoResponseAccepted","org.springframework.ws.transport.http.HttpComponentsMessageSenderIntegrationTest.testSendAndReceiveFault","org.springframework.ws.transport.http.HttpComponentsMessageSenderIntegrationTest.testSendAndReceiveResponse","org.springframework.ws.transport.http.HttpComponentsMessageSenderIntegrationTest.testSendAndReceiveCompressed","org.springframework.ws.transport.http.HttpComponentsMessageSenderIntegrationTest.testSendAndReceiveCompressedInvalidContentSize","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testHandleValidRequest","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testXsdSchema","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testHandleInvalidResponseMultipleSchemas","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.customErrorHandler","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testHandleInvalidRequestSoap11","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testHandleInvalidRequestSoap12","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testAxiom","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testNamespacesInType","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testHandlerInvalidRequestMultipleSchemas","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testMultipleNamespacesAxiom","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testHandlerInvalidRequest","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testHandleInvalidRequestOverridenProperties","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testHandleValidResponseMultipleSchemas","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testNonExistingSchema","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testHandleValidResponse","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testHandleValidRequestMultipleSchemas","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testCreateRequestValidationFaultAxiom","org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptorTest.testHandleInvalidResponse","org.springframework.ws.transport.http.CommonsHttpMessageSenderIntegrationTest.testMaxConnections","org.springframework.ws.transport.http.CommonsHttpMessageSenderIntegrationTest.testContextClose","org.springframework.ws.transport.http.CommonsHttpMessageSenderIntegrationTest.testSendAndReceiveNoResponse","org.springframework.ws.transport.http.CommonsHttpMessageSenderIntegrationTest.testSupports","org.springframework.ws.transport.http.CommonsHttpMessageSenderIntegrationTest.testSendAndReceiveInvalidContentSize","org.springframework.ws.transport.http.CommonsHttpMessageSenderIntegrationTest.testSendAndReceiveNoResponseAccepted","org.springframework.ws.transport.http.CommonsHttpMessageSenderIntegrationTest.testSendAndReceiveFault","org.springframework.ws.transport.http.CommonsHttpMessageSenderIntegrationTest.testSendAndReceiveResponse","org.springframework.ws.transport.http.CommonsHttpMessageSenderIntegrationTest.testSendAndReceiveCompressed","org.springframework.ws.transport.http.CommonsHttpMessageSenderIntegrationTest.testSendAndReceiveCompressedInvalidContentSize","org.springframework.ws.soap.server.endpoint.interceptor.SoapActionSmartEndpointInterceptorTest.shouldInterceptNonMatch","org.springframework.ws.soap.server.endpoint.interceptor.SoapActionSmartEndpointInterceptorTest.shouldInterceptMatch","org.springframework.ws.soap.server.endpoint.interceptor.SoapActionSmartEndpointInterceptorTest.neitherNamespaceNorLocalPart","org.springframework.ws.transport.http.ClientHttpRequestMessageSenderIntegrationTest.testSendAndReceiveNoResponse","org.springframework.ws.transport.http.ClientHttpRequestMessageSenderIntegrationTest.testSupports","org.springframework.ws.transport.http.ClientHttpRequestMessageSenderIntegrationTest.testSendAndReceiveInvalidContentSize","org.springframework.ws.transport.http.ClientHttpRequestMessageSenderIntegrationTest.testSendAndReceiveNoResponseAccepted","org.springframework.ws.transport.http.ClientHttpRequestMessageSenderIntegrationTest.testSendAndReceiveFault","org.springframework.ws.transport.http.ClientHttpRequestMessageSenderIntegrationTest.testSendAndReceiveResponse","org.springframework.ws.transport.http.ClientHttpRequestMessageSenderIntegrationTest.testSendAndReceiveCompressed","org.springframework.ws.transport.http.ClientHttpRequestMessageSenderIntegrationTest.testSendAndReceiveCompressedInvalidContentSize","org.springframework.ws.soap.server.endpoint.mapping.DelegatingSoapEndpointMappingTest.testGetEndpointMapping","org.springframework.ws.transport.http.AbstractHttpSenderConnectionTest.testSupportsStreamingWithChunkingEnabled","org.springframework.ws.transport.http.AbstractHttpSenderConnectionTest.testSupportsStreamingWithChunkingDisabled","org.springframework.ws.soap.server.endpoint.mapping.SoapActionAnnotationMethodEndpointMappingTest.registrationMultiple","org.springframework.ws.soap.server.endpoint.mapping.SoapActionAnnotationMethodEndpointMappingTest.registrationRepeatable","org.springframework.ws.soap.server.endpoint.mapping.SoapActionAnnotationMethodEndpointMappingTest.registrationSingle","org.springframework.ws.support.MarshallingUtilsTest.testUnmarshalMime","org.springframework.ws.support.MarshallingUtilsTest.testMarshalMime","org.springframework.ws.support.MarshallingUtilsTest.testUnmarshal","org.springframework.ws.support.MarshallingUtilsTest.testUnmarshalNoPayload","org.springframework.ws.support.MarshallingUtilsTest.testMarshal","org.springframework.ws.soap.server.endpoint.mapping.SoapActionEndpointMappingTest.testGetLookupKeyForMessage","org.springframework.ws.soap.server.endpoint.mapping.SoapActionEndpointMappingTest.testGetLookupKeyForMessageQuoted","org.springframework.ws.soap.server.endpoint.mapping.SoapActionEndpointMappingTest.testValidateLookupKey","org.springframework.ws.support.DefaultStrategiesHelperTest.testResourceConstructor","org.springframework.ws.support.DefaultStrategiesHelperTest.testGetDefaultStrategies","org.springframework.ws.support.DefaultStrategiesHelperTest.testGetDefaultStrategyMoreThanOne","org.springframework.ws.support.DefaultStrategiesHelperTest.testGetDefaultStrategy","org.springframework.ws.soap.support.SoapUtilsTest.testEscapeAction","org.springframework.ws.soap.support.SoapUtilsTest.testExtractActionFromContentType","org.springframework.ws.soap.support.SoapUtilsTest.testSetActionInContentType","org.springframework.ws.transport.http.LastModifiedHelperTest.testStreamSource","org.springframework.ws.transport.http.LastModifiedHelperTest.testDomSource","org.springframework.ws.transport.http.LastModifiedHelperTest.testSaxSource","org.springframework.ws.soap.client.core.SaajSoapActionCallbackTest.noSoapAction11ShouldProduceEmptySoapActionHeader","org.springframework.ws.soap.client.core.SaajSoapActionCallbackTest.noSoapAction12","org.springframework.ws.soap.client.core.SaajSoapActionCallbackTest.emptySoapAction12ShouldProduceNoSoapActionHeader","org.springframework.ws.soap.client.core.SaajSoapActionCallbackTest.soapAction11ShouldProduceSoapActionHeader","org.springframework.ws.soap.client.core.SaajSoapActionCallbackTest.soapAction12ShouldProduceNoSoapActionHeader","org.springframework.ws.soap.client.core.SaajSoapActionCallbackTest.emptySoapAction11","org.springframework.ws.soap.axiom.AxiomSoap12EnvelopeTest.testGetName","org.springframework.ws.soap.axiom.AxiomSoap12EnvelopeTest.testGetSource","org.springframework.ws.soap.axiom.AxiomSoap12EnvelopeTest.testGetBody","org.springframework.ws.soap.axiom.AxiomSoap12EnvelopeTest.testGetHeader","org.springframework.ws.soap.axiom.AxiomSoap12EnvelopeTest.testAttributes","org.springframework.ws.soap.axiom.AxiomSoap12EnvelopeTest.testAddNamespaceDeclaration","org.springframework.ws.soap.axiom.AxiomSoap12EnvelopeTest.testAddDefaultNamespaceDeclaration","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testExamineHeaderElementsToProcessUltimateDestination","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testExamineHeaderElementsToProcessActors","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testGetName","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testGetType","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testAddNotUnderstood","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testAddUpgrade","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testGetSource","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testExamineHeaderElementsToProcessNoActors","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testExamineHeaderElementWithName","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testExamineAllHeaderElement","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testExamineMustUnderstandHeaderElements","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testRemoveHeaderElement","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testAddHeaderElement","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testGetResult","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testAttributes","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testAddNamespaceDeclaration","org.springframework.ws.soap.axiom.AxiomSoap12HeaderTest.testAddDefaultNamespaceDeclaration","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testPayloadNoCaching","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testAddFaultWithDetailResult","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testAddMustUnderstandFault","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testGetName","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testGetType","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testAddFaultWithSubcode","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testAddSenderFault","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testAddReceiverFault","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testGetSource","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testAddFaultWithDetail","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testAddFaultWithExistingPayload","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testPayload","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testGetPayloadResultTwice","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testNoFault","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testAttributes","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testAddNamespaceDeclaration","org.springframework.ws.soap.axiom.AxiomSoap12BodyTest.testAddDefaultNamespaceDeclaration","org.springframework.ws.soap.axiom.AxiomSoap12MessageFactoryTest.testCreateSoapMessageNoAttachment","org.springframework.ws.soap.axiom.AxiomSoap12MessageFactoryTest.testCreateSoapMessageIllFormedXml","org.springframework.ws.soap.axiom.AxiomSoap12MessageFactoryTest.testCreateEmptySoapMessage","org.springframework.ws.soap.axiom.AxiomSoap12MessageFactoryTest.testCreateSoapMessageMissingContentType","org.springframework.ws.soap.axiom.AxiomSoap12MessageFactoryTest.testCreateSoapMessageMtom","org.springframework.ws.soap.axiom.AxiomSoap12MessageFactoryTest.testCreateSoapMessageSwA","org.springframework.ws.soap.axiom.AxiomSoap12MessageFactoryTest.testCreateEmptyMessage","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testCharsetAttribute","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testSoapAction","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testValidate","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testSetStreamingPayload","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testToDocument","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testSetOtherDocument","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testWriteToTransportResponseAttachment","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testGetVersion","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testSetLiveDocument","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testWriteToTransportOutputStream","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testGetAttachment","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testAddAttachment","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testGetAttachments","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testEmptyMessage","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testEventReaderPayload","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testSaxPayload","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testDomPayload","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testStreamPayload","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testStreamReaderPayload","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingMessageTest.testReaderPayload","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testCharsetAttribute","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testSoapAction","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testValidate","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testSetStreamingPayload","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testToDocument","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testSetOtherDocument","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testWriteToTransportResponseAttachment","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testGetVersion","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testSetLiveDocument","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testWriteToTransportOutputStream","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testGetAttachment","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testAddAttachment","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testGetAttachments","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testEmptyMessage","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testEventReaderPayload","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testSaxPayload","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testDomPayload","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testStreamPayload","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testStreamReaderPayload","org.springframework.ws.soap.axiom.AxiomSoap12MessageTest.testReaderPayload","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testAddFaultWithDetailResult","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testAddMustUnderstandFault","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testAddServerFault","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testAddClientFault","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testAddFault","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testGetName","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testGetType","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testAddFaultNoPrefix","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testGetSource","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testAddFaultWithDetail","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testAddFaultWithExistingPayload","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testPayload","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testGetPayloadResultTwice","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testNoFault","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testAttributes","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testAddNamespaceDeclaration","org.springframework.ws.soap.axiom.AxiomSoap11NonCachingBodyTest.testAddDefaultNamespaceDeclaration","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingBodyTest.testAddFaultWithDetailResult","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingBodyTest.testAddMustUnderstandFault","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingBodyTest.testGetName","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingBodyTest.testGetType","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingBodyTest.testAddFaultWithSubcode","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingBodyTest.testAddSenderFault","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingBodyTest.testAddReceiverFault","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingBodyTest.testGetSource","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingBodyTest.testAddFaultWithDetail","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingBodyTest.testAddFaultWithExistingPayload","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingBodyTest.testPayload","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingBodyTest.testGetPayloadResultTwice","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingBodyTest.testNoFault","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingBodyTest.testAttributes","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingBodyTest.testAddNamespaceDeclaration","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingBodyTest.testAddDefaultNamespaceDeclaration","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testCharsetAttribute","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testSoapAction","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testValidate","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testSetStreamingPayload","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testToDocument","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testSetOtherDocument","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testWriteToTransportResponseAttachment","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testGetVersion","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testSetLiveDocument","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testWriteToTransportOutputStream","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testGetAttachment","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testAddAttachment","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testGetAttachments","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testEmptyMessage","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testEventReaderPayload","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testSaxPayload","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testDomPayload","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testStreamPayload","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testStreamReaderPayload","org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.testReaderPayload","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testCharsetAttribute","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testSoapAction","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testValidate","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testSetStreamingPayload","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testToDocument","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testSetOtherDocument","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testWriteToTransportResponseAttachment","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testGetVersion","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testSetLiveDocument","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testWriteToTransportOutputStream","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testGetAttachment","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testAddAttachment","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testGetAttachments","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testEmptyMessage","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testEventReaderPayload","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testSaxPayload","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testDomPayload","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testStreamPayload","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testStreamReaderPayload","org.springframework.ws.soap.axiom.AxiomSoap12NonCachingMessageTest.testReaderPayload","org.springframework.ws.soap.axiom.AxiomSoap11MessageFactoryTest.testGetCharsetEncoding","org.springframework.ws.soap.axiom.AxiomSoap11MessageFactoryTest.testRepetitiveReadCaching","org.springframework.ws.soap.axiom.AxiomSoap11MessageFactoryTest.testSWS502","org.springframework.ws.soap.axiom.AxiomSoap11MessageFactoryTest.testRepetitiveReadNoCaching","org.springframework.ws.soap.axiom.AxiomSoap11MessageFactoryTest.testCreateSoapMessageUtf16LittleEndianByteOrderMark","org.springframework.ws.soap.axiom.AxiomSoap11MessageFactoryTest.testCreateEmptySoap11Message","org.springframework.ws.soap.axiom.AxiomSoap11MessageFactoryTest.testCreateSoapMessageMtomWeirdStartInfo","org.springframework.ws.soap.axiom.AxiomSoap11MessageFactoryTest.testCreateSoapMessageUtf8ByteOrderMark","org.springframework.ws.soap.axiom.AxiomSoap11MessageFactoryTest.testCreateSoapMessageUtf16BigEndianByteOrderMark","org.springframework.ws.soap.axiom.AxiomSoap11MessageFactoryTest.testCreateSoapMessageNoAttachment","org.springframework.ws.soap.axiom.AxiomSoap11MessageFactoryTest.testCreateSoapMessageIllFormedXml","org.springframework.ws.soap.axiom.AxiomSoap11MessageFactoryTest.testCreateEmptySoapMessage","org.springframework.ws.soap.axiom.AxiomSoap11MessageFactoryTest.testCreateSoapMessageMissingContentType","org.springframework.ws.soap.axiom.AxiomSoap11MessageFactoryTest.testCreateSoapMessageMtom","org.springframework.ws.soap.axiom.AxiomSoap11MessageFactoryTest.testCreateSoapMessageSwA","org.springframework.ws.soap.axiom.AxiomSoap11MessageFactoryTest.testCreateEmptyMessage","org.springframework.ws.soap.axiom.AxiomSoapFaultDetailTest.testGetDetailEntriesWorksWithoutWhitespaceNodes","org.springframework.ws.soap.axiom.AxiomSoapFaultDetailTest.testGetDetailEntriesWorksWithWhitespaceNodes","org.springframework.ws.soap.axiom.AxiomSoap11HeaderTest.testExamineHeaderElementsToProcessActors","org.springframework.ws.soap.axiom.AxiomSoap11HeaderTest.testGetName","org.springframework.ws.soap.axiom.AxiomSoap11HeaderTest.testGetType","org.springframework.ws.soap.axiom.AxiomSoap11HeaderTest.testGetSource","org.springframework.ws.soap.axiom.AxiomSoap11HeaderTest.testExamineHeaderElementsToProcessNoActors","org.springframework.ws.soap.axiom.AxiomSoap11HeaderTest.testExamineHeaderElementWithName","org.springframework.ws.soap.axiom.AxiomSoap11HeaderTest.testExamineAllHeaderElement","org.springframework.ws.soap.axiom.AxiomSoap11HeaderTest.testExamineMustUnderstandHeaderElements","org.springframework.ws.soap.axiom.AxiomSoap11HeaderTest.testRemoveHeaderElement","org.springframework.ws.soap.axiom.AxiomSoap11HeaderTest.testAddHeaderElement","org.springframework.ws.soap.axiom.AxiomSoap11HeaderTest.testGetResult","org.springframework.ws.soap.axiom.AxiomSoap11HeaderTest.testAttributes","org.springframework.ws.soap.axiom.AxiomSoap11HeaderTest.testAddNamespaceDeclaration","org.springframework.ws.soap.axiom.AxiomSoap11HeaderTest.testAddDefaultNamespaceDeclaration","org.springframework.ws.soap.axiom.NonCachingPayloadTest.testDelegatingStreamWriter","org.springframework.ws.soap.axiom.NonCachingPayloadTest.testDelegatingStreamWriterWriteEmptyElement","org.springframework.ws.soap.axiom.NonCachingPayloadTest.testDelegatingStreamWriterWriteEndDocument","org.springframework.ws.soap.axiom.AxiomSoap11EnvelopeTest.testGetName","org.springframework.ws.soap.axiom.AxiomSoap11EnvelopeTest.testGetContent","org.springframework.ws.soap.axiom.AxiomSoap11EnvelopeTest.testGetBody","org.springframework.ws.soap.axiom.AxiomSoap11EnvelopeTest.testGetHeader","org.springframework.ws.soap.axiom.AxiomSoap11EnvelopeTest.testAttributes","org.springframework.ws.soap.axiom.AxiomSoap11EnvelopeTest.testAddNamespaceDeclaration","org.springframework.ws.soap.axiom.AxiomSoap11EnvelopeTest.testAddDefaultNamespaceDeclaration","org.springframework.ws.soap.axiom.support.AxiomUtilsTest.testToLocale","org.springframework.ws.soap.axiom.support.AxiomUtilsTest.testToNamespacePrefixUndeclared","org.springframework.ws.soap.axiom.support.AxiomUtilsTest.testToNamespaceUndeclared","org.springframework.ws.soap.axiom.support.AxiomUtilsTest.testToNamespacePrefixDeclared","org.springframework.ws.soap.axiom.support.AxiomUtilsTest.testToDocument","org.springframework.ws.soap.axiom.support.AxiomUtilsTest.testToEnvelope","org.springframework.ws.soap.axiom.support.AxiomUtilsTest.testToLanguage","org.springframework.ws.soap.axiom.support.AxiomUtilsTest.testToNamespaceDeclared","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testPayloadNoCaching","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testAddFaultWithDetailResult","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testAddMustUnderstandFault","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testAddServerFault","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testAddClientFault","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testAddFault","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testGetName","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testGetType","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testAddFaultNoPrefix","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testGetSource","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testAddFaultWithDetail","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testAddFaultWithExistingPayload","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testPayload","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testGetPayloadResultTwice","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testNoFault","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testAttributes","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testAddNamespaceDeclaration","org.springframework.ws.soap.axiom.AxiomSoap11BodyTest.testAddDefaultNamespaceDeclaration","org.springframework.ws.soap.addressing.server.SimpleActionEndpointMappingTest.testMatch","org.springframework.ws.soap.addressing.server.SimpleActionEndpointMappingTest.testNoMatch","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testLangAttributeOnSoap11FaultString","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testAddFaultWithDetailResult","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testAddMustUnderstandFault","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testAddServerFault","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testAddClientFault","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testAddFault","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testGetName","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testGetType","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testAddFaultNoPrefix","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testGetSource","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testAddFaultWithDetail","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testAddFaultWithExistingPayload","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testPayload","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testGetPayloadResultTwice","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testNoFault","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testAttributes","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testAddNamespaceDeclaration","org.springframework.ws.soap.saaj.SaajSoap11BodyTest.testAddDefaultNamespaceDeclaration","org.springframework.ws.soap.saaj.SaajSoap11EnvelopeTest.testGetName","org.springframework.ws.soap.saaj.SaajSoap11EnvelopeTest.testGetContent","org.springframework.ws.soap.saaj.SaajSoap11EnvelopeTest.testGetBody","org.springframework.ws.soap.saaj.SaajSoap11EnvelopeTest.testGetHeader","org.springframework.ws.soap.saaj.SaajSoap11EnvelopeTest.testAttributes","org.springframework.ws.soap.saaj.SaajSoap11EnvelopeTest.testAddNamespaceDeclaration","org.springframework.ws.soap.saaj.SaajSoap11EnvelopeTest.testAddDefaultNamespaceDeclaration","org.springframework.ws.soap.server.endpoint.SoapFaultDefinitionEditorTest.testSetAsTextEmpty","org.springframework.ws.soap.server.endpoint.SoapFaultDefinitionEditorTest.testSetAsTextReceiver","org.springframework.ws.soap.server.endpoint.SoapFaultDefinitionEditorTest.testSetAsTextIllegalArgument","org.springframework.ws.soap.server.endpoint.SoapFaultDefinitionEditorTest.testSetAsTextNoLocale","org.springframework.ws.soap.server.endpoint.SoapFaultDefinitionEditorTest.testSetAsTextLocale","org.springframework.ws.soap.server.endpoint.SoapFaultDefinitionEditorTest.testSetAsTextSender","org.springframework.ws.soap.saaj.SaajSoap11HeaderTest.testExamineHeaderElementsToProcessActors","org.springframework.ws.soap.saaj.SaajSoap11HeaderTest.testGetName","org.springframework.ws.soap.saaj.SaajSoap11HeaderTest.testGetType","org.springframework.ws.soap.saaj.SaajSoap11HeaderTest.testGetSource","org.springframework.ws.soap.saaj.SaajSoap11HeaderTest.testExamineHeaderElementsToProcessNoActors","org.springframework.ws.soap.saaj.SaajSoap11HeaderTest.testExamineHeaderElementWithName","org.springframework.ws.soap.saaj.SaajSoap11HeaderTest.testExamineAllHeaderElement","org.springframework.ws.soap.saaj.SaajSoap11HeaderTest.testExamineMustUnderstandHeaderElements","org.springframework.ws.soap.saaj.SaajSoap11HeaderTest.testRemoveHeaderElement","org.springframework.ws.soap.saaj.SaajSoap11HeaderTest.testAddHeaderElement","org.springframework.ws.soap.saaj.SaajSoap11HeaderTest.testGetResult","org.springframework.ws.soap.saaj.SaajSoap11HeaderTest.testAttributes","org.springframework.ws.soap.saaj.SaajSoap11HeaderTest.testAddNamespaceDeclaration","org.springframework.ws.soap.saaj.SaajSoap11HeaderTest.testAddDefaultNamespaceDeclaration","org.springframework.ws.soap.server.endpoint.SoapFaultAnnotationExceptionResolverTest.testResolveExceptionSenderSoap12","org.springframework.ws.soap.server.endpoint.SoapFaultAnnotationExceptionResolverTest.testResolveExceptionExceptionMessage","org.springframework.ws.soap.server.endpoint.SoapFaultAnnotationExceptionResolverTest.testResolveExceptionServerSoap11","org.springframework.ws.soap.server.endpoint.SoapFaultAnnotationExceptionResolverTest.testResolveExceptionInheritance","org.springframework.ws.soap.server.endpoint.SoapFaultAnnotationExceptionResolverTest.testResolveExceptionClientSoap11","org.springframework.ws.soap.server.endpoint.SoapFaultAnnotationExceptionResolverTest.testResolveExceptionReceiverSoap12","org.springframework.ws.soap.server.endpoint.SoapFaultAnnotationExceptionResolverTest.testResolveExceptionCustom","org.springframework.ws.soap.server.endpoint.SoapFaultAnnotationExceptionResolverTest.testResolveExceptionDefault","org.springframework.ws.soap.saaj.SaajSoap11MessageFactoryTest.properties","org.springframework.ws.soap.saaj.SaajSoap11MessageFactoryTest.testCreateSoapMessageUtf16LittleEndianByteOrderMark","org.springframework.ws.soap.saaj.SaajSoap11MessageFactoryTest.testCreateEmptySoap11Message","org.springframework.ws.soap.saaj.SaajSoap11MessageFactoryTest.testCreateSoapMessageMtomWeirdStartInfo","org.springframework.ws.soap.saaj.SaajSoap11MessageFactoryTest.testCreateSoapMessageUtf8ByteOrderMark","org.springframework.ws.soap.saaj.SaajSoap11MessageFactoryTest.testCreateSoapMessageUtf16BigEndianByteOrderMark","org.springframework.ws.soap.saaj.SaajSoap11MessageFactoryTest.testCreateSoapMessageNoAttachment","org.springframework.ws.soap.saaj.SaajSoap11MessageFactoryTest.testCreateSoapMessageIllFormedXml","org.springframework.ws.soap.saaj.SaajSoap11MessageFactoryTest.testCreateEmptySoapMessage","org.springframework.ws.soap.saaj.SaajSoap11MessageFactoryTest.testCreateSoapMessageMissingContentType","org.springframework.ws.soap.saaj.SaajSoap11MessageFactoryTest.testCreateSoapMessageMtom","org.springframework.ws.soap.saaj.SaajSoap11MessageFactoryTest.testCreateSoapMessageSwA","org.springframework.ws.soap.saaj.SaajSoap11MessageFactoryTest.testCreateEmptyMessage","org.springframework.ws.soap.server.endpoint.SimpleSoapExceptionResolverTest.testResolveExceptionInternal","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testGetPayloadResult","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testGetPayloadSource","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testGetPayloadSourceText","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testCharsetAttribute","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testSoapAction","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testValidate","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testSetStreamingPayload","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testToDocument","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testSetOtherDocument","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testWriteToTransportResponseAttachment","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testGetVersion","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testSetLiveDocument","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testWriteToTransportOutputStream","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testGetAttachment","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testAddAttachment","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testGetAttachments","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testEmptyMessage","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testEventReaderPayload","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testSaxPayload","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testDomPayload","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testStreamPayload","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testStreamReaderPayload","org.springframework.ws.soap.saaj.SaajSoap11MessageTest.testReaderPayload","org.springframework.ws.soap.server.endpoint.FaultCreatingValidatingMarshallingPayloadEndpointTest.testValidationCorrect","org.springframework.ws.soap.server.endpoint.FaultCreatingValidatingMarshallingPayloadEndpointTest.testValidationIncorrect","org.springframework.ws.soap.saaj.SaajSoap12BodyTest.testAddFaultWithDetailResult","org.springframework.ws.soap.saaj.SaajSoap12BodyTest.testAddMustUnderstandFault","org.springframework.ws.soap.saaj.SaajSoap12BodyTest.testGetName","org.springframework.ws.soap.saaj.SaajSoap12BodyTest.testGetType","org.springframework.ws.soap.saaj.SaajSoap12BodyTest.testAddFaultWithSubcode","org.springframework.ws.soap.saaj.SaajSoap12BodyTest.testAddSenderFault","org.springframework.ws.soap.saaj.SaajSoap12BodyTest.testAddReceiverFault","org.springframework.ws.soap.saaj.SaajSoap12BodyTest.testGetSource","org.springframework.ws.soap.saaj.SaajSoap12BodyTest.testAddFaultWithDetail","org.springframework.ws.soap.saaj.SaajSoap12BodyTest.testAddFaultWithExistingPayload","org.springframework.ws.soap.saaj.SaajSoap12BodyTest.testPayload","org.springframework.ws.soap.saaj.SaajSoap12BodyTest.testGetPayloadResultTwice","org.springframework.ws.soap.saaj.SaajSoap12BodyTest.testNoFault","org.springframework.ws.soap.saaj.SaajSoap12BodyTest.testAttributes","org.springframework.ws.soap.saaj.SaajSoap12BodyTest.testAddNamespaceDeclaration","org.springframework.ws.soap.saaj.SaajSoap12BodyTest.testAddDefaultNamespaceDeclaration","org.springframework.ws.soap.server.SoapMessageDispatcherTest.testProcessMustUnderstandHeadersForActorSoap11","org.springframework.ws.soap.server.SoapMessageDispatcherTest.testProcessMustUnderstandHeadersUnderstoodSoap11","org.springframework.ws.soap.server.SoapMessageDispatcherTest.testProcessMustUnderstandHeadersUnderstoodSoap12","org.springframework.ws.soap.server.SoapMessageDispatcherTest.testProcessMustUnderstandHeadersForRoleSoap12","org.springframework.ws.soap.server.SoapMessageDispatcherTest.testProcessMustUnderstandHeadersNotUnderstoodSoap11","org.springframework.ws.soap.server.SoapMessageDispatcherTest.testProcessMustUnderstandHeadersNotUnderstoodSoap12","org.springframework.ws.soap.server.SoapMessageDispatcherTest.testProcessMustUnderstandHeadersNoInterceptors","org.springframework.ws.soap.server.SoapMessageDispatcherTest.testProcessNoHeader","org.springframework.ws.soap.saaj.SaajSoap12EnvelopeTest.testGetName","org.springframework.ws.soap.saaj.SaajSoap12EnvelopeTest.testGetSource","org.springframework.ws.soap.saaj.SaajSoap12EnvelopeTest.testGetBody","org.springframework.ws.soap.saaj.SaajSoap12EnvelopeTest.testGetHeader","org.springframework.ws.soap.saaj.SaajSoap12EnvelopeTest.testAttributes","org.springframework.ws.soap.saaj.SaajSoap12EnvelopeTest.testAddNamespaceDeclaration","org.springframework.ws.soap.saaj.SaajSoap12EnvelopeTest.testAddDefaultNamespaceDeclaration","org.springframework.ws.soap.saaj.support.SaajXmlReaderTest.testNamespacesPrefixes","org.springframework.ws.soap.saaj.support.SaajXmlReaderTest.testNamespacesNoPrefixes","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testExamineHeaderElementsToProcessUltimateDestination","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testExamineHeaderElementsToProcessActors","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testGetName","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testGetType","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testAddNotUnderstood","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testAddUpgrade","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testGetSource","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testExamineHeaderElementsToProcessNoActors","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testExamineHeaderElementWithName","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testExamineAllHeaderElement","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testExamineMustUnderstandHeaderElements","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testRemoveHeaderElement","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testAddHeaderElement","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testGetResult","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testAttributes","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testAddNamespaceDeclaration","org.springframework.ws.soap.saaj.SaajSoap12HeaderTest.testAddDefaultNamespaceDeclaration","org.springframework.ws.soap.saaj.support.SaajUtilsTest.testToQNameNamespace","org.springframework.ws.soap.saaj.support.SaajUtilsTest.testToQName","org.springframework.ws.soap.saaj.support.SaajUtilsTest.testGetSaajVersion","org.springframework.ws.soap.saaj.support.SaajUtilsTest.testToNameNamespace","org.springframework.ws.soap.saaj.support.SaajUtilsTest.testToNameNamespacePrefix","org.springframework.ws.soap.saaj.support.SaajUtilsTest.testLoadMessage","org.springframework.ws.soap.saaj.support.SaajUtilsTest.testGetSaajVersionInvalidEnvelope","org.springframework.ws.soap.saaj.support.SaajUtilsTest.testToQNamePrefixNamespace","org.springframework.ws.soap.saaj.support.SaajUtilsTest.testToName","org.springframework.ws.soap.saaj.SaajSoap12MessageFactoryTest.testCreateSoapMessageNoAttachment","org.springframework.ws.soap.saaj.SaajSoap12MessageFactoryTest.testCreateSoapMessageIllFormedXml","org.springframework.ws.soap.saaj.SaajSoap12MessageFactoryTest.testCreateEmptySoapMessage","org.springframework.ws.soap.saaj.SaajSoap12MessageFactoryTest.testCreateSoapMessageMissingContentType","org.springframework.ws.soap.saaj.SaajSoap12MessageFactoryTest.testCreateSoapMessageMtom","org.springframework.ws.soap.saaj.SaajSoap12MessageFactoryTest.testCreateSoapMessageSwA","org.springframework.ws.soap.saaj.SaajSoap12MessageFactoryTest.testCreateEmptyMessage","org.springframework.ws.soap.saaj.support.SaajContentHandlerTest.testHandler","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testCharsetAttribute","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testSoapAction","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testValidate","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testSetStreamingPayload","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testToDocument","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testSetOtherDocument","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testWriteToTransportResponseAttachment","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testGetVersion","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testSetLiveDocument","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testWriteToTransportOutputStream","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testGetAttachment","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testAddAttachment","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testGetAttachments","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testEmptyMessage","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testEventReaderPayload","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testSaxPayload","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testDomPayload","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testStreamPayload","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testStreamReaderPayload","org.springframework.ws.soap.saaj.SaajSoap12MessageTest.testReaderPayload","org.springframework.ws.wsdl.wsdl11.provider.DefaultMessagesProviderTest.testAddMessages","org.springframework.ws.wsdl.wsdl11.provider.InliningXsdSchemaTypesProviderTest.testComplex","org.springframework.ws.wsdl.wsdl11.provider.InliningXsdSchemaTypesProviderTest.testSingle","org.springframework.ws.wsdl.wsdl11.Wsdl4jDefinitionTest.testGetSource","org.springframework.ws.wsdl.wsdl11.provider.Soap11ProviderTest.testPopulateBinding","org.springframework.ws.wsdl.wsdl11.SimpleWsdl11DefinitionTest.testGetSource","org.springframework.ws.wsdl.wsdl11.provider.Soap12ProviderTest.testPopulateBinding","org.springframework.ws.wsdl.wsdl11.DefaultWsdl11DefinitionTest.testSoap11And12","org.springframework.ws.wsdl.wsdl11.DefaultWsdl11DefinitionTest.testImport","org.springframework.ws.wsdl.wsdl11.DefaultWsdl11DefinitionTest.testInclude","org.springframework.ws.wsdl.wsdl11.DefaultWsdl11DefinitionTest.testSingle","org.springframework.ws.wsdl.wsdl11.provider.SoapProviderTest.testPopulateBinding","org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupportTest.handleConnectionResponse","org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupportTest.handleConnectionNoResponse","org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupportTest.handleConnectionFaultResponse","org.springframework.ws.wsdl.wsdl11.provider.SuffixBasedMessagesProviderTest.testAddMessages","org.springframework.ws.transport.http.XsdSchemaHandlerAdapterTest.handleNonGet","org.springframework.ws.transport.http.XsdSchemaHandlerAdapterTest.getLastModified","org.springframework.ws.transport.http.XsdSchemaHandlerAdapterTest.handleGet","org.springframework.ws.transport.http.XsdSchemaHandlerAdapterTest.handleGetWithTransformLocation","org.springframework.ws.wsdl.wsdl11.provider.SuffixBasedPortTypesProviderTest.testAddPortTypes","org.springframework.ws.transport.http.WsdlDefinitionHandlerAdapterTest.handleNonGet","org.springframework.ws.transport.http.WsdlDefinitionHandlerAdapterTest.handleSimpleWsdl11DefinitionWithoutTransformLocations","org.springframework.ws.transport.http.WsdlDefinitionHandlerAdapterTest.handleGet","org.springframework.ws.transport.http.WsdlDefinitionHandlerAdapterTest.transformLocationEmptyContextRelativeUrl","org.springframework.ws.transport.http.WsdlDefinitionHandlerAdapterTest.transformLocationRelativeUrl","org.springframework.ws.transport.http.WsdlDefinitionHandlerAdapterTest.transformLocationEmptyContextFullUrl","org.springframework.ws.transport.http.WsdlDefinitionHandlerAdapterTest.transformLocations","org.springframework.ws.transport.http.WsdlDefinitionHandlerAdapterTest.transformLocationFullUrl","org.springframework.ws.transport.http.WsdlDefinitionHandlerAdapterTest.handleSimpleWsdl11DefinitionWithTransformLocation"]}